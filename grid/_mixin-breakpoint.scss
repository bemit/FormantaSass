////
/// Grid: Breakpoint.Mixin
/// ================
/// All the grid breakpoint things.
/// @group Grid
/// @author Michael Becker
////

/// Breakpoint mixin for small-eXtra
/// got no -up or -down version, as -up would be all and -down would be like normal smx, as it is the smallest size
/// @content will only be displayed when screen smaller or same then $for-bp-smx-max-size
@mixin for-bp-smx {
    @media (max-width: $for-bp-smx-max-size) {
        @content;
    }
}

/// Breakpoint mixin for small and bigger
/// @content will only be displayed when screen bigger then $for-bp-sm-min-size
@mixin for-bp-sm-up {
    @media (min-width: $for-bp-sm-min-size) {
        @content;
    }
}
/// Breakpoint mixin for only small
/// @content will only be displayed when screen bigger then $for-bp-sm-min-size and smaller then $for-bp-md-min-size
@mixin for-bp-sm {
    @media (min-width: $for-bp-sm-min-size) and (max-width: $for-bp-md-min-size - 1) {
        @content;
    }
}
/// Breakpoint mixin for small and smaller
/// @content will only be displayed when screen smaller then $for-bp-md-min-size
@mixin for-bp-sm-down {
    @media (max-width: $for-bp-md-min-size - 1) {
        @content;
    }
}

/// Breakpoint mixin for medium and bigger
/// @content will only be displayed when screen bigger then $for-bp-sm-min-size
@mixin for-bp-md-up {
    @media (min-width: $for-bp-md-min-size) {
        @content;
    }
}
/// Breakpoint mixin for only medium
/// @content will only be displayed when screen bigger then $for-bp-sm-min-size and smaller then $for-bp-md-min-size
@mixin for-bp-md {
    @media (min-width: $for-bp-md-min-size) and (max-width: $for-bp-lg-min-size - 1) {
        @content;
    }
}
/// Breakpoint mixin for medium and smaller
/// @content will only be displayed when screen smaller then $for-bp-md-min-size
@mixin for-bp-md-down {
    @media (max-width: $for-bp-lg-min-size - 1) {
        @content;
    }
}

/// Breakpoint mixin for large and bigger
/// @content will only be displayed when screen bigger then $for-bp-lg-min-size
@mixin for-bp-lg-up {
    @media (min-width: $for-bp-lg-min-size) {
        @content;
    }
}
/// Breakpoint mixin for only large
/// @content will only be displayed when screen bigger then $for-bp-lg-min-size and smaller then $for-bp-lgx-min-size
@mixin for-bp-lg {
    @media (min-width: $for-bp-lg-min-size) and (max-width: $for-bp-lgx-min-size - 1) {
        @content;
    }
}
/// Breakpoint mixin for large and smaller
/// @content will only be displayed when screen smaller then $for-bp-lgx-min-size
@mixin for-bp-lg-down {
    @media (max-width: $for-bp-lgx-min-size - 1) {
        @content;
    }
}

/// Breakpoint mixin for large-eXtra
/// This screen size got no -up or -down version, as -down would be all and -up would be like normal lgx, as it is the highest size
/// @content will only be displayed when screen bigger then $for-bp-lgx-min-size
@mixin for-bp-lgx {
    @media (min-width: $for-bp-lgx-min-size) {
        @content;
    }
}

/**
    Syntax: 'max100px', 'min100px'
*/
// TODO
/*
@mixin for-bp-individual($widths...) {
    $media-str: '';
    $already-found: false;
    @each $width in $widths {
        $found: false;
        $tmp-media-str: '';
        @if(str-index($width, 'max')) {
            $found: true;
            $already-found: true;
            $tmp-media-str: '(max-width: ' + str-slice($width, 4) + ')';
        } @else if(str-index($width, 'min')) {
            $already-found: true;
            $found: true;
            $tmp-media-str: '(min-width: ' + str-slice($width, 4) + ')';
        }
        @if($already-found && $found) {
            $media-str: $media-str + ' and ';
            $already-found: false;
        }
            //$media-str: $media-str + $tmp-media-str;

        //width: $width;
    }
    $media-str: unquote($media-str);
    @media ($media-str) {
        @content;
    }

    //    @include for-bp-individual('max100', 'min200', '300', '450'){
    //        color: #fff;
    //    }

}*/