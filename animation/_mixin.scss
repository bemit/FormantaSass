////
/// Animation: Mixin
/// ================
/// These mixins generate animation in css, for default-values see config.
/// @group Animation
/// @author Michael Becker
////

/// Makes prefixed transition
/// @access public
/// @param $args - the transition that should be prefixed
@mixin for-transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}
/// Fade effect with included hover
/// @access public
/// @param {Float} $to-opacity [$for-animation-fade-to-opacity] - the opacity that should be applied on hover
/// @param {Int} $duration [$for-animation-fade-duration] - the duration the opacity should long
/// @param {Float} $timing-function [$for-animation-fade-timing-function] - the css3 transition timing function that should be used
/// @param {Float} $delay [$for-animation-fade-delay] - the delay that should be there before the transition starts
@mixin for-fade($to-opacity: null, $duration: null, $timing-function: null, $delay: null) {
    @if ($duration) {
        $duration: $duration;
    } @else {
        $duration: $for-animation-fade-duration;
    }
    @if ($timing-function) {
        $timing-function: $timing-function;
    } @else {
        $timing-function: $for-animation-fade-timing-function;
    }
    @if ($delay) {
        $delay: $delay;
    } @else {
        @if ($for-animation-fade-delay > 0) {
            $delay: $for-animation-fade-delay;
        }
    }
    @include for-transition(opacity $duration $timing-function $delay);
    &:hover {
        @if ($to-opacity) {
            $to-opacity: $to-opacity;
        } @else {
            $to-opacity: $for-animation-fade-to-opacity;
        }
        opacity: $to-opacity;
    }
}
/// Generates a background at this element which zooms in with hover and there could be some overlay over it
/// @access public
/// @param {String} $bg-url - the relative path to the background from the folder where the end css is located
/// @param {Bool|Color} $bg-overlay [false] - false: not displaying, null: use default config, else: Color Value (rgba(), hex, ..)
@mixin for-zoom($bg-url, $bg-overlay: false, $to-scale: null, $to-opacity: null, $duration: null, $timing-function: null, $delay: null) {
    @if ($duration) {
        $duration: $duration;
    } @else {
        $duration: $for-animation-zoom-duration;
    }
    @if ($to-scale) {
        $to-scale: $to-scale;
    } @else {
        $to-scale: $for-animation-zoom-to-scale;
    }
    @if ($timing-function) {
        $timing-function: $timing-function;
    } @else {
        $timing-function: $for-animation-zoom-timing-function;
    }
    @if ($delay) {
        $delay: $delay;
    } @else {
        @if ($for-animation-zoom-delay > 0) {
            $delay: $for-animation-zoom-delay;
        }
    }

    overflow: hidden;
    position: relative;
    * {
        position: relative;
        z-index: 2;
    }
    &:hover {
        &:before {
            @include for-transform(scale($to-scale));
        }
        @if ($bg-overlay != false) {
            &:after {
                @if ($to-opacity) {
                    $to-opacity: $to-opacity;
                } @else {
                    $to-opacity: $for-animation-zoom-to-opacity;
                }
                opacity: $to-opacity;
            }
        }
    }
    &:before,
    &:after {
        content: ' ';
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    }
    &:before {
        -webkit-transition: -moz-transform $duration $timing-function $delay;
        -moz-transition: -webkit-transform $duration $timing-function $delay;
        -o-transition: -o-transform $duration $timing-function $delay;
        transition: transform $duration $timing-function $delay;
        background: url($bg-url) no-repeat;
        background-size: cover;
        z-index: 0;
    }
    @if ($bg-overlay != false) {
        &:after {
            @if ($bg-overlay) {
                $bg-overlay: $bg-overlay;
            } @else {
                $bg-overlay: $for-animation-zoom-bg-overlay;
            }
            background: $bg-overlay;
            z-index: 1;
            @include for-transition(opacity $duration $timing-function $delay);
        }
    }
}